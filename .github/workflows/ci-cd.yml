name: Deploy my Angular Application

on:
  push:
    branches:
      - main

jobs:
  checkout-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
      
      - name: Get list of files
        run: |
          ls -a
      
      - name: Node Setup
        uses: actions/setup-node@v5
        with:
          node-version: '18'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Run Build
        run: npm run build -- --configuration production
      
      - name: Get list of files
        run: |
          ls
          echo "end of the first command"
          ls dist/myapp/browser/
      
      - name: Upload Build To artifact
        uses: actions/upload-artifact@v4
        with:
          name: worksheet-build
          path: dist/myapp/browser/

  Deploy:
    runs-on: ubuntu-latest
    needs: checkout-and-build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: worksheet-build
          path: ./build


      - name: Copy files via SSH
        uses: appleboy/scp-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          source: ./build/
          target: /home/ubuntu/
      
      - name: Copy files via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |

            sudo rm -rf /var/www/html/*
            mv /home/ubuntu/build/* /var/www/html/
            sudo systemctl restart nginx
  
  notify:
    needs: [checkout-and-build, Deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Evaluate job results
        run: |
          echo "Build results : ${{ needs.checkout-and-build.result }}"
          echo "Build results : ${{ needs.checkout-and-build }}"
          echo "Deploy results : ${{ needs.Deploy.result }}"
          echo "Deploy results : ${{ needs.Deploy }}"
